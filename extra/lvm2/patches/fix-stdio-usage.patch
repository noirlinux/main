--- a/lib/commands/toolcontext.c
+++ b/lib/commands/toolcontext.c
@@ -1673,7 +1673,7 @@
 	/* FIXME Make this configurable? */
 	reset_lvm_errno(1);
 
-#ifndef VALGRIND_POOL
+#if defined(__GLIBC__) && !defined(VALGRIND_POOL)
 	/* Set in/out stream buffering before glibc */
 	if (set_buffering
 #ifdef SYS_gettid
@@ -2053,7 +2053,7 @@
 		dm_hash_destroy(cmd->cft_def_hash);
 
 	dm_device_list_destroy(&cmd->cache_dm_devs);
-#ifndef VALGRIND_POOL
+#if defined(__GLIBC__) && !defined(VALGRIND_POOL)
 	if (cmd->linebuffer) {
 		/* Reset stream buffering to defaults */
 		if (is_valid_fd(STDIN_FILENO) &&
--- a/lib/mm/memlock.c
+++ b/lib/mm/memlock.c
@@ -160,7 +160,7 @@
 
 static void _allocate_memory(void)
 {
-#ifndef VALGRIND_POOL
+#if !defined(VALGRIND_POOL) && defined(__GLIBC__)
 	void *stack_mem;
 	struct rlimit limit;
 	int i, area = 0, missing = _size_malloc_tmp, max_areas = 32, hblks;
--- a/tools/lvmcmdline.c
+++ b/tools/lvmcmdline.c
@@ -3398,6 +3398,7 @@
 /* Make sure we have always valid filedescriptors 0,1,2 */
 static int _check_standard_fds(void)
 {
+#ifdef __GLIBC__
 	int err = is_valid_fd(STDERR_FILENO);
 
 	if (!is_valid_fd(STDIN_FILENO) &&
@@ -3425,6 +3426,12 @@
 		return 0;
 	}
 
+#else
+    if (!is_valid_fd(STDERR_FILENO) ||
+        !is_valid_fd(STDOUT_FILENO) ||
+        !is_valid_fd(STDIN_FILENO))
+        return 0;
+#endif
 	return 1;
 }
 
